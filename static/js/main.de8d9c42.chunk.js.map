{"version":3,"sources":["components/Cabecalho.js","components/Rodape.js","pages/Inicio.js","constants/config.js","pages/Musicas.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","bg","variant","Brand","Nav","className","Link","href","Rodape","fixed","Inicio","Container","fluid","Row","Col","xs","lg","BACKEND","Musicas","valorInicial","nome","banda","album","genero","lancamento","useState","musica","setMusica","musicas","setMusicas","carregandoMusicas","setCarregandoMusicas","erros","setErros","aviso","setAviso","salvandoMusicas","setSalvandoMusicas","confirmaExclusao","setConfirmaExclusao","obterMusicas","a","url","fetch","then","response","json","data","catch","error","console","message","useEffect","document","title","validaErrosMusicas","novosErros","length","event","preventDefault","Object","keys","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","alteraDadosMusica","e","target","name","value","Form","Group","controlId","Label","Control","placeholder","onChange","isInvalid","Feedback","type","Button","onClick","salvarMusica","Spinner","animation","size","Table","striped","bordered","map","item","Date","toLocaleDateString","colSpan","Toast","onClose","show","delay","autohide","style","position","top","right","Header","closeButton","Body","Modal","onHide","Title","Footer","excluirMusica","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"kOAkBeA,EAZG,WACd,OACA,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,UACI,eAACF,EAAA,EAAOG,MAAR,WAAc,cAAC,IAAD,IAAd,eACA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,eAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,KAAf,UAAoB,cAAC,IAAD,IAApB,gBACA,eAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,YAAf,UAA2B,cAAC,IAAD,IAA3B,wBCKGC,EAbA,WACX,OACI,gCACI,uBACA,uBACR,cAACR,EAAA,EAAD,CAAQC,GAAG,YAAYQ,MAAM,SAA7B,SACI,eAACT,EAAA,EAAOG,MAAR,CAAcE,UAAU,aAAxB,UACI,cAAC,IAAD,IADJ,2DCcOK,EAhBA,WACX,OACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACP,UAAU,MAA3B,UACI,cAAC,EAAD,IACA,cAACQ,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACI,2DACA,qFACA,sGAGR,cAAC,EAAD,Q,6FCnBCC,EAAU,0CCySRC,EAzRC,WACZ,IAAMC,EAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,WAAY,IAC/E,EAA4BC,mBAASN,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkDJ,oBAAS,GAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA8CV,oBAAS,GAAvD,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAAgDZ,oBAAS,GAAzD,mBAAOa,EAAP,KAAyBC,EAAzB,KAEQnB,EAA2CM,EAA3CN,KAAMC,EAAqCK,EAArCL,MAAOC,EAA8BI,EAA9BJ,MAAOC,EAAuBG,EAAvBH,OAAQC,EAAeE,EAAfF,WAVlB,SAYHgB,KAZG,8EAYlB,4BAAAC,EAAA,6DACIV,GAAqB,GACjBW,EAFR,UAEiBzB,EAFjB,qBAGU0B,MAAMD,GACPE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEFlB,EAAWkB,MAEdC,OAAM,SAAUC,GACbC,QAAQD,MAAM,gCAA+BA,EAAME,YAV/D,OAYIpB,GAAqB,GAZzB,4CAZkB,sBA2BlBqB,qBAAU,WACNZ,KACAa,SAASC,MAAQ,4BAClB,IAEH,IAAMC,GAAqB,WACvB,IAAMC,EAAa,GAOnB,OANKpC,GAAiB,KAATA,EACJA,EAAKqC,OAAS,EAAGD,EAAWpC,KAAO,iDACnCC,EAAMoC,OAAS,EAAGD,EAAWnC,MAAQ,kDACrCC,EAAMmC,OAAS,EAAGD,EAAWlC,MAAQ,qDACrCC,EAAOkC,OAAS,EAAGD,EAAWjC,OAAS,sDACvCC,EAAWiC,OAAS,IAAGD,EAAWhC,WAAa,4DAL9BgC,EAAWpC,KAAO,gCAMrCoC,GAxCO,8CA2ClB,WAA4BE,GAA5B,mBAAAjB,EAAA,yDACIiB,EAAMC,iBACAH,EAAaD,OACfK,OAAOC,KAAKL,GAAYC,OAAS,GAHzC,gBAIQxB,EAASuB,GAJjB,8BAMQnB,GAAmB,GACbyB,EAASpC,EAAOqC,eAAe,OAAS,MAAQ,OAClDrB,EARZ,UAQqBzB,EARrB,sBASc0B,MAAMD,EAAK,CACbsB,OAAQF,EACRG,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU3C,KACtBkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACDA,EAAKuB,KAAOvB,EAAKI,QAAWhB,EAAS,+BAA8BA,EAAS,IAC7ER,EAAUR,GACVqB,QACDQ,OAAM,SAAUC,GACfC,QAAQD,MAAR,qCAAyCA,EAAME,aAtB/D,QAwBQd,GAAmB,GAxB3B,6CA3CkB,oEAuElB,4BAAAI,EAAA,6DACQC,EADR,UACiBzB,EADjB,oBACoCS,EAAO4C,KAD3C,SAEU3B,MAAMD,EAAK,CACbsB,OAAQ,SACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,sBAErBtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACFA,EAAKI,QAAUhB,EAASY,EAAKI,SAAWhB,EAAS,IACjDK,QAEHQ,OAAM,SAAUC,GACbC,QAAQD,MAAR,uCAA2CA,EAAME,aAd7D,4CAvEkB,sBAyFlB,IAAMoB,GAAoB,SAAAC,GACtB7C,EAAU,2BAAKD,GAAN,kBAAe8C,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SACjD1C,EAAS,KAGb,OACI,eAACtB,EAAA,EAAD,CAAWC,OAAK,EAACP,UAAU,MAA3B,UACI,cAAC,EAAD,IACA,eAACQ,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACI,+BAAI,cAAC,IAAD,IAAJ,8BACA,eAAC4D,EAAA,EAAD,CAAMZ,OAAO,OAAb,UAEI,eAACY,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACIN,KAAK,OACLO,YAAY,YACZN,MAAOvD,EACP8D,SAAUX,GACVY,YAAanD,EAAMZ,OAEvB,cAACwD,EAAA,EAAKI,QAAQI,SAAd,CAAuBC,KAAK,UAA5B,SACKrD,EAAMZ,UAIf,eAACwD,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACIN,KAAK,QACLO,YAAY,2BACZN,MAAOtD,EACP6D,SAAUX,GACVY,YAAanD,EAAMX,QAEvB,cAACuD,EAAA,EAAKI,QAAQI,SAAd,CAAuBC,KAAK,UAA5B,SACKrD,EAAMX,WAIf,eAACuD,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACIN,KAAK,QACLO,YAAY,wBACZN,MAAOrD,EACP4D,SAAUX,GACVY,YAAanD,EAAMV,QAEvB,cAACsD,EAAA,EAAKI,QAAQI,SAAd,CAAuBC,KAAK,UAA5B,SACKrD,EAAMV,WAIf,eAACsD,EAAA,EAAKC,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACIN,KAAK,SACLO,YAAY,WACZN,MAAOpD,EACP2D,SAAUX,GACVY,YAAanD,EAAMT,SAEvB,cAACqD,EAAA,EAAKI,QAAQI,SAAd,CAAuBC,KAAK,UAA5B,SACKrD,EAAMT,YAIf,eAACqD,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACIN,KAAK,aACLW,KAAK,OACLJ,YAAY,iBACZN,MAAOnD,EACP0D,SAAUX,GACVY,YAAanD,EAAMR,aAEvB,cAACoD,EAAA,EAAKI,QAAQI,SAAd,CAAuBC,KAAK,UAA5B,SACKrD,EAAMR,gBAIf,cAAC8D,EAAA,EAAD,CAAQpF,QAAQ,UAAUmF,KAAK,SAC3BE,QAAS,SAACf,GAAD,OA9Kf,4CA8KsBgB,CAAahB,IAC7BlB,MAAM,oBAFV,SAGKlB,EACK,qCAAE,cAACqD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,OAAnC,kBACA,qCAAE,cAAC,IAAD,IAAF,oBAMlB,eAAC7E,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACI,+BAAI,cAAC,IAAD,IAAJ,8BACCc,GACG,qCACI,cAAC2D,EAAA,EAAD,CAASC,UAAU,SAASxF,QAAQ,YACpC,iDAGR,eAAC0F,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAAvB,UACI,gCACI,qBAAIzF,UAAU,sBAAd,UACI,sCACA,uCACA,uCACA,2CACA,+CACA,mDAGR,kCACKuB,EAAQmE,KAAI,SAAAC,GAAI,OACb,+BACI,6BAAKA,EAAK5E,OACV,6BAAK4E,EAAK3E,QACV,6BAAK2E,EAAK1E,QACV,6BAAK0E,EAAKzE,SACV,6BAAK,IAAI0E,KAAKD,EAAKxE,YAAY0E,uBAC/B,+BACI,cAACZ,EAAA,EAAD,CAAQpF,QAAQ,oBAAoBoD,MAAM,qBACtCiC,QAAS,kBAAM5D,EAAUqE,IAD7B,SAGI,cAAC,IAAD,MAJR,OAOI,cAACV,EAAA,EAAD,CAAQpF,QAAQ,iBAAiBoD,MAAM,qBACnCiC,QAAS,WACLhD,GAAoB,GACpBZ,EAAUqE,IAHlB,SAMI,cAAC,IAAD,WAnBHA,EAAK1B,QAyBlB,qBAAIjE,UAAU,sBAAd,UACI,oBAAI8F,QAAQ,IAAZ,uCACA,6BAAKvE,EAAQ6B,wBAMjC,eAAC2C,EAAA,EAAD,CACIC,QAAS,kBAAMlE,EAAS,KACxBmE,KAAMpE,EAAMuB,OAAS,EACrBiC,WAAW,EACXa,MAAO,IACPC,UAAQ,EACRnG,UAAU,aACVoG,MAAO,CACHC,SAAU,WACVC,IAAK,GACLC,MAAO,IAVf,UAYI,cAACR,EAAA,EAAMS,OAAP,CAAcC,aAAa,EAA3B,mBACA,cAACV,EAAA,EAAMW,KAAP,UAAa7E,OAEjB,eAAC8E,EAAA,EAAD,CAAOtB,WAAW,EAAOY,KAAMhE,EAC3B2E,OAAQ,kBAAM1E,GAAoB,IADtC,UAEI,cAACyE,EAAA,EAAMH,OAAP,UACI,cAACG,EAAA,EAAME,MAAP,iDAEJ,cAACF,EAAA,EAAMD,KAAP,+DAGA,eAACC,EAAA,EAAMG,OAAP,WACI,cAAC7B,EAAA,EAAD,CAAQpF,QAAQ,SAASqF,QAAS,kBAAMhD,GAAqBD,IAA7D,4BAGA,cAACgD,EAAA,EAAD,CAAQpF,QAAQ,UACZqF,QAAS,YA1QX,oCA2QM6B,GACA7E,GAAqBD,IAH7B,mCASR,cAAC,EAAD,QC5RG,SAAS+E,IACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9G,IACjC,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,WAAWC,UAAWtG,SCPxD,IAMeuG,EANH,WACV,OACE,cAACJ,EAAD,KCCJK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvE,SAASwE,eAAe,W","file":"static/js/main.de8d9c42.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { MdQueueMusic, MdPlayCircleOutline, MdDescription, MdStore, MdHome, MdMail, MdSaveAlt, MdAudiotrack, MdAccountCircle  } from 'react-icons/md'\r\n\r\n\r\nconst Cabecalho = () => {\r\n    return(\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand><MdAudiotrack/>YourMusic</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/\"><MdHome/> Início</Nav.Link>\r\n            <Nav.Link href=\"#/musicas\"><MdQueueMusic/> Músicas</Nav.Link>\r\n        </Nav>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default Cabecalho","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { MdAudiotrack } from 'react-icons/md'\r\n\r\nconst Rodape = () => {\r\n    return(\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n    <Navbar bg=\"secondary\" fixed=\"bottom\">\r\n        <Navbar.Brand className=\"text-light\">\r\n            <MdAudiotrack/> YourMusic &copy; - Todos os direitos reservados!\r\n        </Navbar.Brand>\r\n    </Navbar>\r\n    </div>\r\n    )\r\n}\r\nexport default Rodape","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\n\r\nconst Inicio = () => {\r\n    return (\r\n        <Container fluid className=\"p-8\">\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={6}>\r\n                    <h1>Boas vindas ao YourMusic!</h1>\r\n                    <p>Você está na página inicial do nosso site. </p>\r\n                    <p> Comece adicionando suas músicas favoritas pelo menu acima =)</p>\r\n                </Col>\r\n            </Row>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Inicio","export const BACKEND = \"https://avaliacao-backend.herokuapp.com\"\r\n\r\nconst config = { BACKEND }\r\n\r\nexport default config","import React, { useState, useEffect } from \"react\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\nimport { MdQueueMusic, MdSubject, MdModeEdit, MdDelete, MdSave } from 'react-icons/md'\r\nimport { BACKEND } from '../constants'\r\n\r\nconst Musicas = () => {\r\n    const valorInicial = { nome: '', banda: '', album: '', genero: '', lancamento: '' }\r\n    const [musica, setMusica] = useState(valorInicial)\r\n    const [musicas, setMusicas] = useState([])\r\n    const [carregandoMusicas, setCarregandoMusicas] = useState(false)\r\n    const [erros, setErros] = useState({})\r\n    const [aviso, setAviso] = useState('')\r\n    const [salvandoMusicas, setSalvandoMusicas] = useState(false)\r\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\r\n\r\n    const { nome, banda, album, genero, lancamento } = musica\r\n\r\n    async function obterMusicas() {\r\n        setCarregandoMusicas(true)\r\n        let url = `${BACKEND}/musicas`\r\n        await fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //console.log(data)\r\n                setMusicas(data)\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Erro ao obter as músicas: ' + error.message)\r\n            })\r\n        setCarregandoMusicas(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        obterMusicas()\r\n        document.title = 'Cadastro das Músicas'\r\n    }, [])\r\n\r\n    const validaErrosMusicas = () => {\r\n        const novosErros = {}\r\n        if (!nome || nome === '') novosErros.nome = 'O nome não pode ser vazio!'\r\n        else if (nome.length < 2) novosErros.nome = 'O nome deve conter, no mínimo, duas letras.'\r\n        else if (banda.length < 2) novosErros.banda = 'A banda deve conter, no mínimo, duas letras.'\r\n        else if (album.length < 2) novosErros.album = 'O álbum deve conter, no mínimo, duas letras.'\r\n        else if (genero.length < 2) novosErros.genero = 'O gênero deve conter, no mínimo, duas letras.'\r\n        else if (lancamento.length < 8) novosErros.lancamento = 'O lançamento deve conter, no mínimo, oito digitos.'\r\n        return novosErros\r\n    }\r\n\r\n    async function salvarMusica(event) {\r\n        event.preventDefault()\r\n        const novosErros = validaErrosMusicas()\r\n        if (Object.keys(novosErros).length > 0) {\r\n            setErros(novosErros)\r\n        } else {\r\n            setSalvandoMusicas(true)\r\n            const metodo = musica.hasOwnProperty('_id') ? 'PUT' : 'POST'\r\n            let url = `${BACKEND}/musicas`\r\n            await fetch(url, {\r\n                method: metodo,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(musica)\r\n            }).then(response => response.json())\r\n                .then(data => {\r\n                    (data._id || data.message) ? setAviso('Música salva com sucesso') : setAviso('')\r\n                    setMusica(valorInicial)\r\n                    obterMusicas()\r\n                }).catch(function (error) {\r\n                    console.error(`Erro ao salvar a música ${error.message}`)\r\n                })\r\n            setSalvandoMusicas(false)\r\n        }\r\n    }\r\n\r\n    async function excluirMusica() {\r\n        let url = `${BACKEND}/musicas/${musica._id}`\r\n        await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                data.message ? setAviso(data.message) : setAviso('')\r\n                obterMusicas()\r\n            })\r\n            .catch(function (error) {\r\n                console.error(`Erro ao excluir a música: ${error.message}`)\r\n            })\r\n    }\r\n\r\n    const alteraDadosMusica = e => {\r\n        setMusica({ ...musica, [e.target.name]: e.target.value })\r\n        setErros({})\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={6}>\r\n                    <h4><MdQueueMusic /> Cadastro das Músicas</h4>\r\n                    <Form method=\"post\">\r\n\r\n                        <Form.Group controlId=\"nome\">\r\n                            <Form.Label>Música</Form.Label>\r\n                            <Form.Control\r\n                                name=\"nome\"\r\n                                placeholder=\"Ex: DiE4u\"\r\n                                value={nome}\r\n                                onChange={alteraDadosMusica}\r\n                                isInvalid={!!erros.nome}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.nome}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Banda\">\r\n                            <Form.Label>Banda</Form.Label>\r\n                            <Form.Control\r\n                                name=\"banda\"\r\n                                placeholder=\"Ex: Bring Me The Horizon\"\r\n                                value={banda}\r\n                                onChange={alteraDadosMusica}\r\n                                isInvalid={!!erros.banda}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.banda}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"album\">\r\n                            <Form.Label>Álbum</Form.Label>\r\n                            <Form.Control\r\n                                name=\"album\"\r\n                                placeholder=\"Ex: That's The Spirit\"\r\n                                value={album}\r\n                                onChange={alteraDadosMusica}\r\n                                isInvalid={!!erros.album}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.album}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"genero\">\r\n                            <Form.Label>Gênero</Form.Label>\r\n                            <Form.Control\r\n                                name=\"genero\"\r\n                                placeholder=\"Ex: Rock\"\r\n                                value={genero}\r\n                                onChange={alteraDadosMusica}\r\n                                isInvalid={!!erros.genero}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.genero}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"lancamento\">\r\n                            <Form.Label>Lançamento</Form.Label>\r\n                            <Form.Control\r\n                                name=\"lancamento\"\r\n                                type=\"date\"\r\n                                placeholder=\"Ex: 20/10/2014\"\r\n                                value={lancamento}\r\n                                onChange={alteraDadosMusica}\r\n                                isInvalid={!!erros.lancamento}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.lancamento}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                            onClick={(e) => salvarMusica(e)}\r\n                            title=\"Salvar o registro\">\r\n                            {salvandoMusicas\r\n                                ? <><Spinner animation=\"border\" size=\"sm\" /> Aguarde... </>\r\n                                : <><MdSave />Salvar</>\r\n                            }\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                    <h4><MdSubject /> Listagem das Músicas</h4>\r\n                    {carregandoMusicas &&\r\n                        <>\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                            <p>Carregando...</p>\r\n                        </>\r\n                    }\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr className=\"bg-danger text-dark\">\r\n                                <th>Nome</th>\r\n                                <th>Banda</th>\r\n                                <th>Album</th>\r\n                                <th>Gênero</th>\r\n                                <th>Lançamento</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {musicas.map(item => (\r\n                                <tr key={item._id}>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{item.banda}</td>\r\n                                    <td>{item.album}</td>\r\n                                    <td>{item.genero}</td>\r\n                                    <td>{new Date(item.lancamento).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        <Button variant=\"outline-secondary\" title=\"Editar a música\"\r\n                                            onClick={() => setMusica(item)}\r\n                                        >\r\n                                            <MdModeEdit />\r\n                                        </Button>\r\n                                        &nbsp;\r\n                                        <Button variant=\"outline-danger\" title=\"Apagar a música\"\r\n                                            onClick={() => {\r\n                                                setConfirmaExclusao(true)\r\n                                                setMusica(item)\r\n                                            }}\r\n                                        >\r\n                                            <MdDelete />\r\n                                        </Button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            <tr className=\"bg-danger text-dark\">\r\n                                <td colSpan=\"5\">Quantidade de Músicas:</td>\r\n                                <td>{musicas.length}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Toast\r\n                onClose={() => setAviso('')}\r\n                show={aviso.length > 0}\r\n                animation={false}\r\n                delay={4000}\r\n                autohide\r\n                className=\"bg-success\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 10,\r\n                    right: 10\r\n                }}>\r\n                <Toast.Header closeButton={false}>Aviso</Toast.Header>\r\n                <Toast.Body>{aviso}</Toast.Body>\r\n            </Toast>\r\n            <Modal animation={false} show={confirmaExclusao}\r\n                onHide={() => setConfirmaExclusao(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Confirmação da Exclusão</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Confirma a exclusão da categoria selecionada?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\r\n                        ❌Cancelar\r\n                    </Button>\r\n                    <Button variant=\"success\"\r\n                        onClick={() => {\r\n                            excluirMusica()\r\n                            setConfirmaExclusao(!confirmaExclusao)\r\n                        }}>\r\n                        ✅Confirmar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Musicas","import React from 'react'\r\nimport { HashRouter, Switch, Route} from 'react-router-dom'\r\n\r\nimport Inicio from '../pages/Inicio'\r\nimport Musicas from '../pages/Musicas'\r\n\r\nexport default function Rotas (){\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Inicio} />\r\n                <Route exact path=\"/musicas\" component={Musicas} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n   ","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () => {\n  return (\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n<meta http-equiv=\"Content-Security-Policy\" \ncontent=\"upgrade-insecure-requests\"></meta>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}